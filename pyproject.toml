[build-system]
requires = [
	"setuptools>=61.2",
	"versioningit",
]
build-backend = "setuptools.build_meta"

[project]
name = "gufe"
description = ""
readme = "README.md"
authors = [{name = "The OpenFE developers", email = "openfe@omsf.io"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
]
urls = {Homepage = "https://github.com/OpenFreeEnergy/gufe"}
requires-python = ">= 3.10"

dynamic = ["version"]

[tool.setuptools]
zip-safe = false
include-package-data = true
license-files = ["LICENSE"]

[tool.setuptools.packages]
find = {namespaces = false}

[tool.mypy]
files = "gufe"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gufe.vendor.*"
ignore_errors = true

[tool.coverage.run]
omit = [
    "*/_version.py",
    "*/tests/dev/*py",
    "gufe/tests/*",
    "gufe/vendor/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pragma: no-cover",
    "-no-cov",
    "raise NotImplementedError",
    '\.\.\.',
]


[tool.versioningit]
default-version = "1+unknown"

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"

[tool.versioningit.vcs]
method = "git"
match = ["*"]
default-tag = "0.0.0"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
    # "F",  # Pyflakes
    # "I",  # isort
    "W",  # pycodestyle warnings
    # "E",  # pycodestyle errors
    # "C901"  # mccabe complexity  TODO: add this back in
    # "UP",
]
ignore = [
    "E402",  # module-level import not at top (conflicts w/ isort)
    "E501",  # line-length violations (black enforces these)
    "E731",  # lambda expressions (TODO: we should fix these)
    "E722",  # bare excepts (TODO: we should fix these in a follow-up PR)
    "F401",  # unused imports
    "UP03",  # pyupgrade linting
    ]

[tool.ruff.lint.isort]
known-first-party = ["gufe"]

[tool.interrogate]
fail-under = 0
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values for verbose: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 2
color = true
exclude = ["build", "docs"]
